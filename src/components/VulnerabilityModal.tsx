import React from 'react';
import { X, AlertTriangle, CheckCircle, Copy, ExternalLink } from 'lucide-react';
import { Vulnerability } from '../services/vulnerabilityScanner';

interface VulnerabilityModalProps {
  vulnerability: Vulnerability | null;
  onClose: () => void;
}

function VulnerabilityModal({ vulnerability, onClose }: VulnerabilityModalProps) {
  if (!vulnerability) return null;

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critique': return 'bg-red-100 text-red-800 border-red-200';
      case 'eleve': return 'bg-orange-100 text-orange-800 border-orange-200';
      case 'moyen': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case 'faible': return 'bg-blue-100 text-blue-800 border-blue-200';
      default: return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getSecureExample = (type: string) => {
    switch (type) {
      case 'xss':
        return `// Code sécurisé
const userInput = req.body.content;
// Utiliser textContent au lieu de innerHTML
element.textContent = userInput;
// Ou échapper le HTML
element.innerHTML = escapeHtml(userInput);`;
      case 'injection':
        return `// Code sécurisé
// Éviter eval() - utiliser JSON.parse pour les données
const data = JSON.parse(userInput);
// Ou utiliser des fonctions sécurisées
const result = safeFunction(userInput);`;
      case 'secrets':
        return `// Code sécurisé
// Utiliser des variables d'environnement
const apiKey = process.env.API_KEY;
const password = process.env.DB_PASSWORD;
// Ou un gestionnaire de secrets
const secrets = await secretManager.getSecret('api-key');`;
      default:
        return '// Exemple de code sécurisé non disponible';
    }
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white dark:bg-gray-800 rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-2xl font-bold text-gray-900 dark:text-white">
              Détails de la Vulnérabilité
            </h3>
            <button
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            >
              <X className="h-6 w-6" />
            </button>
          </div>
          
          <div className="space-y-6">
            {/* En-tête avec sévérité */}
            <div className="flex items-center justify-between">
              <span className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-medium border ${getSeverityColor(vulnerability.severity)}`}>
                <AlertTriangle className="h-4 w-4 mr-2" />
                <span className="capitalize">{vulnerability.severity}</span>
              </span>
              <span className="text-sm text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                Ligne {vulnerability.line}
              </span>
            </div>
            
            {/* Description */}
            <div className="bg-blue-50 dark:bg-blue-900 p-4 rounded-lg">
              <h4 className="font-semibold text-blue-900 dark:text-blue-100 mb-2 flex items-center">
                <AlertTriangle className="h-5 w-5 mr-2" />
                Description
              </h4>
              <p className="text-blue-800 dark:text-blue-200">{vulnerability.description}</p>
            </div>
            
            {/* Explication détaillée */}
            <div>
              <h4 className="font-semibold text-gray-900 dark:text-white mb-3">Pourquoi c'est dangereux ?</h4>
              <p className="text-gray-700 dark:text-gray-300 leading-relaxed">{vulnerability.explanation}</p>
            </div>
            
            {/* Comparaison code vulnérable vs sécurisé */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Code vulnérable */}
              <div>
                <div className="flex items-center justify-between mb-3">
                  <h4 className="font-semibold text-red-600 dark:text-red-400 flex items-center">
                    <X className="h-5 w-5 mr-2" />
                    Code Vulnérable
                  </h4>
                  <button
                    onClick={() => copyToClipboard(vulnerability.codeSnippet)}
                    className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 p-1 rounded"
                  >
                    <Copy className="h-4 w-4" />
                  </button>
                </div>
                <div className="bg-red-50 dark:bg-red-900 p-4 rounded-lg border border-red-200 dark:border-red-700">
                  <pre className="text-sm text-red-800 dark:text-red-300 font-mono overflow-x-auto">
                    <code>{vulnerability.codeSnippet}</code>
                  </pre>
                </div>
              </div>
              
              {/* Code sécurisé */}
              <div>
                <div className="flex items-center justify-between mb-3">
                  <h4 className="font-semibold text-green-600 dark:text-green-400 flex items-center">
                    <CheckCircle className="h-5 w-5 mr-2" />
                    Code Sécurisé
                  </h4>
                  <button
                    onClick={() => copyToClipboard(getSecureExample(vulnerability.type))}
                    className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 p-1 rounded"
                  >
                    <Copy className="h-4 w-4" />
                  </button>
                </div>
                <div className="bg-green-50 dark:bg-green-900 p-4 rounded-lg border border-green-200 dark:border-green-700">
                  <pre className="text-sm text-green-800 dark:text-green-300 font-mono overflow-x-auto">
                    <code>{getSecureExample(vulnerability.type)}</code>
                  </pre>
                </div>
              </div>
            </div>
            
            {/* Solution recommandée */}
            <div className="bg-green-50 dark:bg-green-900 p-4 rounded-lg border border-green-200 dark:border-green-700">
              <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2 flex items-center">
                <CheckCircle className="h-5 w-5 mr-2" />
                Solution Recommandée
              </h4>
              <p className="text-green-700 dark:text-green-400">{vulnerability.fix}</p>
            </div>
            
            {/* Ressources supplémentaires */}
            <div className="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg">
              <h4 className="font-semibold text-gray-900 dark:text-white mb-3">Ressources Utiles</h4>
              <div className="space-y-2">
                <a href="#" className="flex items-center text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 text-sm">
                  <ExternalLink className="h-4 w-4 mr-2" />
                  Guide OWASP sur les vulnérabilités {vulnerability.type.toUpperCase()}
                </a>
                <a href="#" className="flex items-center text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 text-sm">
                  <ExternalLink className="h-4 w-4 mr-2" />
                  Meilleures pratiques de sécurité JavaScript
                </a>
                <a href="#" className="flex items-center text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 text-sm">
                  <ExternalLink className="h-4 w-4 mr-2" />
                  Outils de test de sécurité automatisés
                </a>
              </div>
            </div>
          </div>
          
          <div className="mt-8 flex justify-end space-x-3 pt-6 border-t border-gray-200 dark:border-gray-700">
            <button
              onClick={onClose}
              className="px-6 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
            >
              Fermer
            </button>
            <button className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center">
              <ExternalLink className="h-4 w-4 mr-2" />
              Apprendre Plus
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}

export default VulnerabilityModal;